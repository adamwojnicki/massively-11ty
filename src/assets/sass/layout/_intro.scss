///
/// Massively by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Intro */
@use "../libs/vendor" as vendor;
@use "../base/typography" as typography;
@use "../components/button" as button;
@use "../libs/mixins" as mixins;
@use "../libs/breakpoints" as breakpoints;

#intro {
	@include typography.color-typography(invert);
	@include button.color-button(invert);
	@include mixins.padding(calc(_size(padding) * 4), calc(_size(padding) * 2));
	@include vendor.vendor('align-items', 'center');
	@include vendor.vendor('display', 'flex');
	@include vendor.vendor('flex-direction', 'column');
	@include vendor.vendor('justify-content', 'flex-end');
	@include vendor.vendor('transition', ('opacity 1s ease',
			'transform 1s ease'
		));
	position: relative;
	cursor: default;
	text-align: center;
	z-index: 1;
	min-height: 100vh;

	h1 {
		font-size: 5rem;
		line-height: 1;
	}

	p {
		font-size: 1.25rem;
		font-style: italic;
		margin-top: -0.25rem;
		text-align: center;
	}

	&+#header {
		margin-top: -20rem;

		.logo {
			@include vendor.vendor('transform', 'translateY(2rem)');
			opacity: 0;
			visibility: hidden;
		}
	}

	&.hidden {
		@include vendor.vendor('pointer-events', 'none');
		@include vendor.vendor('transform', 'translateY(2rem)');
		@include vendor.vendor('transition', ('opacity 0.5s ease',
				'transform 0.5s ease',
				'visibility 0.5s'
			));
		opacity: 0;
		visibility: hidden;

		&+#header {
			.logo {
				@include vendor.vendor('transform', 'translateY(0)');
				opacity: 1;
				visibility: visible;
			}
		}
	}

	body.is-preload & {
		@include vendor.vendor('transform', 'translateY(2rem)');
		opacity: 0;

		&:not(.hidden) {
			&+#header+#nav {
				@include vendor.vendor('transform', 'translateY(4rem)');
				opacity: 0;
			}
		}
	}

	@include breakpoints.breakpoint('<=medium') {
		@include mixins.padding(calc(_size(padding) * 2), calc(_size(padding) * 2));
		min-height: 90vh;

		p {
			br {
				display: none;
			}
		}

		&+#header {
			margin-top: -14rem;
		}
	}

	@include breakpoints.breakpoint('<=small') {
		@include mixins.padding(calc(_size(padding) * 1.5), calc(_size(padding) * 1));
		min-height: 80vh;

		h1 {
			font-size: 3.25rem;
			line-height: 1.1;
			margin-bottom: calc(_size(element-margin) * 0.5);
		}

		p {
			font-size: 1rem;
			margin-top: 0rem;
		}

		.actions {
			display: none;
		}
	}
}